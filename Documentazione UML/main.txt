@startuml
start
:Legge input {p,q,b,c} oppure {p,q,b,c,id1,id2};
:controlla che len(input) = 5 or len(input) = 7;
:controlla i valori di b e c;
:controlla che (p = 3 and q in {3,4,5}) or (q = 3 and p in {3,4,5}));
  :Importa la mesh relativa al solido platonico inserito;
  switch(separo per i valori di p e q)
  case(p = 3)
      switch()
      case (b = c) 
          :Effettua la triangolazionde di tipo II;
          :Esporta su paraview;
          if(inseriti id1 e id2)
            :Calcolo del cammino minimo;
          endif
      case (b = 0 or c = 0) 
          :Effettua la triangolazione di tipo I;
          :Esporta su paraview;
          if(inseriti id1 e id2)
            :Calcolo del cammino minimo;
          endif
      endswitch
  case(q = 3)
      switch()
      case(b = c)
          :Effettua la triangolazione di tipo II;
          :Crea il duale;
          :Esporta su paraview;
          if(inseriti id1 e id2)
            :Calcolo del cammino minimo;
          endif
      case(b = 0 or c = 0)
          :Effettua la triangolazione di tipo I;
          :Crea il duale;
          :Esporta su paraview;
          if(inseriti id1 e id2)
            :Calcolo del cammino minimo;
          endif
      endswitch
  endswitch
stop
@enduml